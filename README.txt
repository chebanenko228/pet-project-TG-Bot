Telegram Bot для Управления Доступом в Группу

Этот бот контролирует доступ пользователей к группе в Telegram.
Пользователи могут отправлять заявку на доступ командой /request,
а администратор одобряет или отклоняет заявки. Бот ограничивает количество сообщений до 3 в день и автоматически отслеживает истечение доступа.

Автоматическое удаление сообщений пользователей без доступа.
Ограничение до 3 сообщений в день.
Сброс ежедневных лимитов в полночь.
Проверка истечения срока доступа.

Установка и запуск:
Клонируйте репозиторий: git clone <URL_репозитория> cd <папка_репозитория>
Создайте виртуальное окружение (рекомендуется): python -m venv venv

Windows
venv\Scripts\activate

Linux / Mac
source venv/bin/activate

Установите зависимости: pip install -r requirements.txt
Создайте бота в Telegram через BotFather:
Откройте BotFather: https://t.me/BotFather
Отправьте /newbot и следуйте инструкциям.
Сохраните API токен для бота.

Настройте параметры в коде (main.py): API_TOKEN = "ВАШ_API_TOKEN" ADMIN_ID = ВАШ_ID_АДМИНИСТРАТОРА GROUP_ID = ВАШ_ID_ГРУППЫ

Создайте группу в Telegram:
Создайте группу или канал.
Добавьте бота в группу.
Сделайте бота администратором, чтобы он мог удалять сообщения пользователей без доступа.

Запуск бота: python main.py Бот автоматически создаст базу данных group_access.db и таблицы для заявок и доступа.

Рекомендации:
Для постоянной работы бота используйте VPS или сервисы вроде PythonAnywhere, Heroku или Docker.
Обновляйте список команд через BotFather, чтобы пользователи видели актуальные команды.
Структура проекта:
    .
    ├─ mainSeveralAdmins.py # основной код бота
    ├─ requirements.txt # зависимости Python
    ├─ group_access_EG.db # база данных (создаётся автоматически)
    └─ README.txt

==========================
       КОМАНДЫ БОТА
==========================

Пользовательские команды:

/start
    - Приветствие и объяснение работы бота.
    - Показывает инструкцию, как подать заявку на доступ к группе.

/request
    - Подать заявку на доступ к группе.
    - Ограничение: можно отправлять не чаще 1 раза в час.
    - Если доступ уже есть, бот покажет оставшийся срок и количество доступных постов на сегодня.

Админские команды:

/list
    - Показать список всех пользователей с активным доступом.
    - В списке: ID, username, срок действия доступа, количество постов за сегодня.

/revoke <user_id>
    - Досрочно отозвать доступ у конкретного пользователя по его ID.
    - Пользователь и администратор получают уведомление.

/reset_all
    - Сбросить дневной лимит постов (posts_today) у всех пользователей.

/reset_user <user_id>
    - Сбросить дневной лимит постов (posts_today) только у конкретного пользователя по его ID.
